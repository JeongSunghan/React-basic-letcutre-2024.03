import { useState } from "react"
import styles from '../styles/Home.module.css'


export default function Home() {
    //state = 페이지 상태 의미, 페이지에서 들고있을 값을 의미한다
    //state를 선언할 때 React의 useState라는 것을 이요하여 페이지 상태 서언
    //useState() 괄호안에 초기에 상태에 세팅될 값을 넣는다


    const [number, setNumber] = useState(0);
    const [holdNumber, setHoldNumber] = useState(0);
    const [operation, setOperation] = useState('');

    /*
     기능 구현
     1. 계산기에 표시되는 수자를바꾸느 함수
     2. 표시되는 수자를 한개식 삭제하는 함수
     3. 더하기, 빼기, 나누기 등의 명령어를 눌렀을 때 처리하는 함수
     4. = 을 눌렀을때 계산 결과가 나오는 함수
     */


    //  숫자를 변경하는 함수
    // 1, ... , 9 등의 버튼을 눌렀을 때 그 숫자를 받아줘야 함
    const handleChangeNumber = (enteredNumber) => {
        //setNumber로 표시될 숫자를 세팅
        setNumber(parseFloat(String(number) + enteredNumber))

        //버튼을 클릭할 때 함수가 실행

    }

    //<- 버튼을 눌렀을 때 지우는 함수
    const handleRemoveNumber = () => {

        //123이 있을때 <- 누르면 3만 지워져야 함
        //number를 string으로 변경
        const numberString = String(number)

        if (numberString.length === 1) {
            setNumber(0);
            //숫자가 1글자일때, 예를들어 2일때 <- 버튼을 누르면 지워지는게 아닌 0이 나와야 함
            //숫자가 한글자인지 두글자인지는 string length를 이용
            // === 은 숫자문자열 길이가 0과 같다 의미
            //이때 숫자를 0으로 바꿔주기
        } else {
            //숫자 문자열의 맨 뒷자리 숫자만 잘라야함. 예를들어 123 -> 12
            //이때 string slice를 이용
            setNumber(parseFloat(numberString.slice(0, numberString.length - 1)))
        }
    }

    //더하기 빼기 나누기 나머지 등의 버튼 함수
    const handleClickOperation = (enteredOperation) => {

        if (number !== 0) {
            setOperation(enteredOperation)
            //기존에 입력되어있던 값을 상태로 저장
            setHoldNumber(number);

            //그 다음 화면에 표시된 숫자를 0으로 초기화
            setNumber(0);
        }

    }

    const handleCalculation = () => {
        switch (operation) {
            case '+':
                //holdNumber(메인 숫자) + number(화면 표시값)
                setNumber(holdNumber + number)

                break;

            case '-':
                setNumber(holdNumber - number)
                break;

            case '*':
                setNumber(holdNumber * number)
                break;

            case '/':
                setNumber(holdNumber / number)
                break;

            case '%':
                setNumber(holdNumber % number)
                break;

            default:
                setNumber(holdNumber + number)
                break;
        }
        setHoldNumber(0)
    }

    //이제 함수를 = 버튼에 세팅

    return (
        <>
            <head>
                <title>계산기</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </head>
            <main className={styles.main}>
                <div className={styles.container}>
                    <div className={styles.calculated}>
                        {number}
                    </div>
                    <div>
                        {/* 버튼클릭시 해당 함수 실행 */}
                        <button className={styles.btn} >.</button>
                        <button className={styles.btn} onClick={handleClickOperation('%')}>%</button>
                        <button className={styles.btn} onClick={() => setNumber(0)}>AC</button>
                        <button className={styles.btn} onClick={handleRemoveNumber}>{'<-'}</button>
                    </div>
                    <div>
                        <button className={styles.btn} onClick={() => handleChangeNumber(1)}>1</button>
                        <button className={styles.btn} onClick={() => handleChangeNumber(2)}>2</button>
                        <button className={styles.btn} onClick={() => handleChangeNumber(3)}>3</button>
                        <button className={styles.btn} onClick={() => handleClickOperation('+')}>+</button>
                    </div>
                    <div>
                        <button className={styles.btn} onClick={() => handleChangeNumber(4)}>4</button>
                        <button className={styles.btn} onClick={() => handleChangeNumber(5)}>5</button>
                        <button className={styles.btn} onClick={() => handleChangeNumber(6)}>6</button>
                        <button className={styles.btn} onClick={() => handleClickOperation('-')}>-</button>
                    </div>
                    <div>
                        <button className={styles.btn} onClick={() => handleChangeNumber(7)}>7</button>
                        <button className={styles.btn} onClick={() => handleChangeNumber(8)}>8</button>
                        <button className={styles.btn} onClick={() => handleChangeNumber(9)}>9</button>
                        <button className={styles.btn} onClick={() => handleClickOperation('*')}>*</button>
                    </div>
                    <div>
                        <button className={styles.btn} onClick={() => handleChangeNumber(0)}>0</button>

                        <button className={styles.btn}>_</button>
                        <button className={styles.btn} onClick={handleCalculation}>=</button>
                        <button className={styles.btn} onClick={() => handleClickOperation('/')}>/</button>
                    </div>
                </div>
            </main>
        </>
    )
}